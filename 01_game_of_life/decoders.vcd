$date
	Wed Sep 29 15:38:07 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module test_decoders $end
$scope module UUT $end
$var wire 1 ! ena $end
$var wire 3 " in [2:0] $end
$var wire 8 # out [7:0] $end
$var wire 4 $ ena1 [3:0] $end
$scope module dec0 $end
$var wire 1 % ena $end
$var wire 2 & in [1:0] $end
$var wire 4 ' out [3:0] $end
$var wire 2 ( ena1 [1:0] $end
$scope module dec0 $end
$var wire 1 ) ena $end
$var wire 1 * in $end
$var reg 2 + out [1:0] $end
$upscope $end
$scope module dec1 $end
$var wire 1 , ena $end
$var wire 1 - in $end
$var reg 2 . out [1:0] $end
$upscope $end
$scope module switcher $end
$var wire 1 % ena $end
$var wire 1 / in $end
$var reg 2 0 out [1:0] $end
$upscope $end
$upscope $end
$scope module dec1 $end
$var wire 1 1 ena $end
$var wire 2 2 in [1:0] $end
$var wire 4 3 out [3:0] $end
$var wire 2 4 ena1 [1:0] $end
$scope module dec0 $end
$var wire 1 5 ena $end
$var wire 1 6 in $end
$var reg 2 7 out [1:0] $end
$upscope $end
$scope module dec1 $end
$var wire 1 8 ena $end
$var wire 1 9 in $end
$var reg 2 : out [1:0] $end
$upscope $end
$scope module switcher $end
$var wire 1 1 ena $end
$var wire 1 ; in $end
$var reg 2 < out [1:0] $end
$upscope $end
$upscope $end
$scope module switcher $end
$var wire 1 ! ena $end
$var wire 1 = in $end
$var reg 2 > out [1:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1 >
0=
b0 <
0;
b0 :
09
08
b0 7
06
05
b0 4
b0 3
b0 2
01
b1 0
0/
b0 .
0-
0,
b1 +
0*
1)
b1 (
b1 '
b0 &
1%
b1 $
b1 #
b0 "
1!
$end
#1000
b10 #
b10 '
b10 +
19
16
1-
1*
b1 2
b1 &
b1 "
#2000
b1 .
0)
1,
b10 (
b10 0
b100 #
b100 '
b0 +
1;
09
06
1/
0-
0*
b10 2
b10 &
b10 "
#3000
b1000 #
b1000 '
b10 .
19
16
1-
1*
b11 2
b11 &
b11 "
#4000
b1 3
b1 7
15
b0 +
b1 4
b1 <
0)
0,
0%
11
b0 (
b0 0
b10000 #
b0 '
b0 .
b10 $
b10 >
0;
09
06
0/
0-
0*
1=
b0 2
b0 &
b100 "
#5000
b100000 #
b10 3
b10 7
19
16
1-
1*
b1 2
b1 &
b101 "
#6000
b1 :
05
18
b10 4
b10 <
b1000000 #
b100 3
b0 7
1;
09
06
1/
0-
0*
b10 2
b10 &
b110 "
#7000
b10000000 #
b1000 3
b10 :
19
16
1-
1*
b11 2
b11 &
b111 "
#8000
08
b0 #
b0 3
b0 :
b0 4
b0 <
0;
09
06
0/
0-
0*
01
0=
b0 2
b0 &
b0 $
b0 >
b0 "
0!
#9000
19
16
1-
1*
b1 2
b1 &
b1 "
#10000
1;
09
06
1/
0-
0*
b10 2
b10 &
b10 "
#11000
19
16
1-
1*
b11 2
b11 &
b11 "
#12000
0;
09
06
0/
0-
0*
1=
b0 2
b0 &
b100 "
#13000
19
16
1-
1*
b1 2
b1 &
b101 "
#14000
1;
09
06
1/
0-
0*
b10 2
b10 &
b110 "
#15000
19
16
1-
1*
b11 2
b11 &
b111 "
#16000
